1. 什么是杨辉三角和转置矩阵（文字说明即可）？
   杨辉三角:是二项式系数在三角形中的一种几何排列,
   每个数等于它上方两数之和。
   每行数字左右对称，由1开始逐渐变大。
   第n行的数字有n项。
   前n行共[(1+n)n]/2 个数。
   第n行的m个数可表示为 C(n-1，m-1)，即为从n-1个不同元素中取m-1个元素的组合数。
   第n行的第m个数和第n-m+1个数相等 ，为组合数性质之一。
   每个数字等于上一行的左右两个数字之和。可用此性质写出整个杨辉三角。即第n+1行的第i个数等于第n行的第i-1个数和第i个数之和，这也是组合数的性质之一。即 C(n+1,i)=C(n,i)+C(n,i-1)。
   (a+b)n的展开式中的各项系数依次对应杨辉三角的第(n+1)行中的每一项。
   将第2n+1行第1个数，跟第2n+2行第3个数、第2n+3行第5个数……连成一线，这些数的和是第4n+1个斐波那契数；将第2n行第2个数(n>1)，跟第2n-1行第4个数、第2n-2行第6个数……这些数之和是第4n-2个斐波那契数。	
   转置矩阵:将矩阵的行列互换得到的新矩阵称为转置矩阵,转置矩阵的行列式不变

2. 说明列表和Set集合的相同点和不同点。
	相同点:a.都是可迭代对象
		b.都可以改变大小,内容
	不同点:列表是有序的,集合是无序的
		列表元素可以重复,集合元素不能重复
		
3. 请写出Set集合支持的所有方法及说明（例如：add 向Set集合中添加一个元素）
	add():为集合添加元素
	clear():移除集合中的所有元素
	copy():拷贝一个集合
	difference():返回多个集合的差集
	difference_update():移除集合中的元素,该元素在指定的集合也存在
	discard():删除集合中指定元素,如果元素不存在,则忽略
	intersection():返回集合的交集
	intersection_update():返回集合的交集
	isdisjoint():判断两个集合是否包含相同的元素,如果没有返回True,否则返回False
	issubset():判断指定集合是否为该方法 参数集合的子集
	pop():随机移除元素
	remove():移除指定元素,如果不存在,则报错
	symmetric_difference():返回两个集合中不重复的元素集合
	union():返回两个集合的并集
	update():给集合添加元素

4. 请写出字典支持的所有方法及说明（例如：pop 从字典中移除指定的key并返回其value）
	内置函数:
		len(dict):计算字典元素个数,即键的总数
		str(dict):输出字典,以可打印的字符串表示
		type(variable):返回输入的变量类型,如果变量是字典就返回字典类型
	内置方法:
		radiansdict.clear():删除字典内所有元素
		radiansdict.copy():返回一个字典的浅复制
		radiansdict.fromkeys():创建一个新字典,以序列seq中元素做字典的键,val为字典所有键对应的初始值
		radiansdict.get(key,default=none):返回指定键的值,如果值不在字典中返回default值
		key in dict:如果键在字典里返回true,否则返回false
		radiansdict.items():以列表返回可遍历的(键,值)元组数组
		radiansdict.keys():返回一个迭代器,可以使用list()来转换为列表
		radiansdict.setdefault(key,default=None):和get()类似,但如果键不存在于字典中,将会添加键并将值设为default
		radiansdict.update(dict2):把字典dict2的键值对更新到dict里
		radiansdict.values():返回一个迭代器,可以使用list()来转换为列表
		pop(key[,default]):删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值
		popitem():随机返回并删除字典中的最后一对键和值。

5. 请写出Python内建函数及说明（参考：https://docs.python.org/3/library/functions.html）
	abs():返回数字的绝对值
	divmod(): 函数把除数和余数运算结果结合起来，返回一个包含商和余数的元组(a // b, a % b),在 python 2.3 版本之前不允许处理复数。
	input():Python3.x 中 input() 函数接受一个标准输入数据，返回为 string 类型。
	open():用于打开一个文件，创建一个 file 对象，相关的方法才可以调用它进行读写。
	staticmethod() 返回函数的静态方法。
	该方法不强制要求传递参数，如下声明一个静态方法：
	class C(object):
	@staticmethod
	def f(arg1, arg2, ...):
        ...
	以上实例声明了静态方法 f，从而可以实现实例化使用 C().f()，当然也可以不实例化调用该方法 C.f()。
	函数语法
	staticmethod(function)

	all() 函数用于判断给定的可迭代参数 iterable 中的所有元素是否都为 TRUE，如果是返回 True，否则返回 False。元素除了是 0、空、None、False 外都算 True。
	enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。Python 2.3. 以上版本可用，2.6 添加 start 参数。
	int() 函数用于将一个字符串或数字转换为整型。
	ord() 函数是 chr() 函数（对于8位的ASCII字符串）或 unichr() 函数（对于Unicode对象）的配对函数，它以一个字符（长度为1的字符串）作为参数，返回对应的 ASCII 数值，或者 Unicode 数值，如果所给的 Unicode 字符超出了你的 Python 定义范围，则会引发一个 TypeError 的异常。
	str() 函数将对象转化为适于人阅读的形式。
	any() 函数用于判断给定的可迭代参数 iterable 是否全部为 False，则返回 False，如果有一个为 True，则返回 True。
	eval() 函数用来执行一个字符串表达式，并返回表达式的值。
	isinstance() 函数来判断一个对象是否是一个已知的类型，类似 type()。
type() 不会认为子类是一种父类类型，不考虑继承关系。

isinstance() 会认为子类是一种父类类型，考虑继承关系。

如果要判断两个类型是否相同推荐使用 isinstance()。
	pow() 方法返回 xy（x的y次方） 的值。
	sum() 方法对系列进行求和计算
	basestring() 方法是 str 和 unicode 的超类（父类），也是抽象类，因此不能被调用和实例化，但可以被用来判断一个对象是否为 str 或者 unicode 的实例，isinstance(obj, basestring) 等价于 isinstance(obj, (str, unicode))。
	execfile() 函数可以用来执行一个文件
	issubclass() 方法用于判断参数 class 是否是类型参数 classinfo 的子类。
	print() 方法用于打印输出，最常见的一个函数。
	super() 函数是用于调用父类(超类)的一个方法。

super 是用来解决多重继承问题的，直接用类名调用父类方法在使用单继承的时候没问题，但是如果使用多继承，会涉及到查找顺序（MRO）、重复调用（钻石继承）等种种问题。

MRO 就是类的方法解析顺序表, 其实也就是继承父类方法时的顺序表。
	bin() 返回一个整数 int 或者长整数 long int 的二进制表示。
	file() 函数用于创建一个 file 对象，它有一个别名叫 open()，更形象一些，它们是内置函数。参数是以字符串的形式传递的。
	iter() 函数用来生成迭代器。
	property() 函数的作用是在新式类中返回属性值。
	tuple() 函数将列表转换为元组。
	bool() 函数用于将给定参数转换为布尔类型，如果没有参数，返回 False。
	filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。

该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判断，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。
	 len() 方法返回对象（字符、列表、元组等）长度或项目个数。
	 range() 函数可创建一个整数列表，一般用在 for 循环中。
	type() 函数如果你只有第一个参数则返回对象的类型，三个参数返回新的类型对象
	bytearray() 方法返回一个新字节数组。这个数组里的元素是可变的，并且每个元素的值范围: 0 <= x < 256
	float() 函数用于将整数和字符串转换成浮点数
	list() 方法用于将元组转换为列表。
	raw_input() 用来获取控制台的输入。
raw_input() 将所有输入作为字符串看待，返回字符串类型
注意：input() 和 raw_input() 这两个函数均能接收 字符串 ，但 raw_input() 直接读取控制台的输入（任何类型的输入它都可以接收）。而对于 input() ，它希望能够读取一个合法的 python 表达式，即你输入字符串的时候必须使用引号将它括起来，否则它会引发一个 SyntaxError 。
除非对 input() 有特别需要，否则一般情况下我们都是推荐使用 raw_input() 来与用户交互。
注意：python3 里 input() 默认接收到的是 str 类型。
	unichr() 函数 和 chr()函数功能基本一样， 只不过是返回 unicode 的字符。
	callable() 函数用于检查一个对象是否是可调用的。如果返回 True，object 仍然可能调用失败；但如果返回 False，调用对象 object 绝对不会成功。
	format():Python2.6 开始，新增了一种格式化字符串的函数 str.format()，它增强了字符串格式化的功能。
基本语法是通过 {} 和 : 来代替以前的 % 。
format 函数可以接受不限个参数，位置可以不按顺序。
	locals() 函数会以字典类型返回当前位置的全部局部变量。
	reduce() 函数会对参数序列中元素进行累积。
函数将一个数据集合（链表，元组等）中的所有数据进行下列操作：用传给 reduce 中的函数 function（有两个参数）先对集合中的第 1、2 个元素进行操作，得到的结果再与第三个数据用 function 函数运算，最后得到一个结果。
	chr() 用一个范围在 range（256）内的（就是0～255）整数作参数，返回一个对应的字符。
	frozenset() 返回一个冻结的集合，冻结后集合不能再添加或删除任何元素。
	long() 函数将数字或字符串转换为一个长整型。
	reload() 用于重新载入之前载入的模块。
	vars() 函数返回对象object的属性和属性值的字典对象
	classmethod 修饰符对应的函数不需要实例化，不需要 self 参数，但第一个参数需要是表示自身类的 cls 参数，可以来调用类的属性，类的方法，实例化对象等。
	map() 会根据提供的函数对指定序列做映射。
第一个参数 function 以参数序列中的每一个元素调用 function 函数，返回包含每次 function 函数返回值的新列表。
	repr() 函数将对象转化为供解释器读取的形式。
	xrange() 函数用法与 range 完全相同，所不同的是生成的不是一个数组，而是一个生成器。
	cmp(x,y) 函数用于比较2个对象，如果 x < y 返回 -1, 如果 x == y 返回 0, 如果 x > y 返回 1。
	globals() 函数会以字典类型返回当前位置的全部全局变量。
	max() 方法返回给定参数的最大值，参数可以为序列。
	reverse() 函数用于反向列表中元素。
	zip() 函数用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的列表。
	compile() 函数将一个字符串编译为字节代码。
	hasattr() 函数用于判断对象是否包含对应的属性。
	memoryview() 函数返回给定参数的内存查看对象(Momory view)。
	round() 方法返回浮点数x的四舍五入值。
	__import__() 函数用于动态加载类和函数 。
	complex() 函数用于创建一个值为 real + imag * j 的复数或者转化一个字符串或数为复数。如果第一个参数为字符串，则不需要指定第二个参数。。
	hash() 用于获取取一个对象（字符串或者数值等）的哈希值。
	min() 方法返回给定参数的最小值，参数可以为序列。
	set() 函数创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。
	delattr 函数用于删除属性。
delattr(x, 'foobar') 相等于 del x.foobar。
	help() 函数用于查看函数或模块用途的详细说明。
	next() 返回迭代器的下一个项目。
	setattr() 函数对应函数 getattr()，用于设置属性值，该属性不一定是存在的。
	dict() 函数用于创建一个字典。
	hex() 函数用于将10进制整数转换成16进制，以字符串形式表示。
	slice() 函数实现切片对象，主要用在切片操作函数里的参数传递。
	dir() 函数不带参数时，返回当前范围内的变量、方法和定义的类型列表；带参数时，返回参数的属性、方法列表。如果参数包含方法__dir__()，该方法将被调用。如果参数不包含__dir__()，该方法将最大限度地收集参数信息。
	id() 函数用于获取对象的内存地址。
	oct() 函数将一个整数转换成8进制字符串。
	sorted() 函数对所有可迭代的对象进行排序操作。
	exec 执行储存在字符串或文件中的Python语句，相比于 eval，exec可以执行更复杂的 Python 代码。

