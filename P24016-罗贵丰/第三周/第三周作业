1. 说明列表的浅拷贝和深拷贝的区别
   深拷贝就是将一个对象拷贝到另一个对象中，这意味着如果你对一个对象的拷贝做出改变时，不会影响原对象。
   而浅拷贝则是将一个对象的引用拷贝到另一个对象上，所以如果我们在拷贝中改动，会影响到原对象。
　
2. 说明列表和元组的相同点和不同
   相同点：都是序列类型
   不同点：1)是否可变
           元组(tuple)是不可变类型，大小固定；而列表(list)是可变类型，数据可以动态变化
           2)元素是否可以相同
           元组中的每一个元素都具有唯一性，而列表中的元素是可以相同的
　
3. 请写出字符串支持的所有方法及说明（例如: lower 返回字符串的小写）
    my_str = 'xxx'                  # 初始化字符串
    my_str+"hello"			        # 在字符串后方增加其他字符
    my_str*N						# 字符串的乘，重复N次
    my_str.find("x")				# 从左至右查找指定元素，返回第一个对应元素的下标，不存在则返回-1; rfind():从右向左查找
    my_str.index("x"))		        # 从左至右查找指定元素，返回第一个对应元素的下标，不存在则报错; rindex():从右向左查找
    my_str.count("x")			    # 返回字符串中这个元素的个数
    my_str.split("x")			    # 以指定元素作分隔符对字符串进行切割，返回list,split(分隔符,分隔次数)
    my_str.upper()			        # 将所有字符转为大写
    my_str.lower()			        # 将所有字符转为小写
    my_str.capitalize()		        # 将字符串首字母转为大写，其他转为小写
    my_str.title()			        # 将每个单词首字母转为大写，其他转为小写
    my_str.endswith("xx")		    # 判断是否以指定元素结尾（区分大小写），返回bool值
    my_str.startswith("xx")	        # 判断是否以指定元素开头（区分大小写），返回bool值
    my_str.ljust(40,"*")		    # 从左往右计算字符串长度，若字符串不足指定长度则使用指定字符在右侧补齐；rjust()从右往左计算
    my_str.center(40,"*")		    # 与上面类似，在两侧使用指定符号补齐
    my_str.strip()			        # 清除字符串两端的空格，lstrip():清除左侧空格，rstrip():清除右侧空格
    my_str.partition("x")		    # 以指定字符（从左往右查找到的第一个）为界限，将整个字符串分为3段，返回list
    "*".join(my_str) 		        # 以指定字符将字符串中各元素相连接
    my_str.replace("x","X")	        # 将字符串中全部指定元素替换为另一元素,repleace(指定元素,新元素,替换次数)
    my_str[7])					    # 返回指定下标索引的元素  下标从0开始计算，第n位元素的下标为n-1
    my_str[-1]					    # 返回字符串中最后一位元素
    my_str[2:11]					# 返回指定下标范围内的元素(str类型)，左闭右开区间
    my_str[2:11:3]				    # 在指定区间内每次跳特定的位数进行获取元素并返回[起始:结束:步长] 不指定则默认起始0，结束为最后(含最后一位)，步长1
    my_str[::-1]					# 将字符串进行翻转

　
4. 使用选择排序算法实现排序[3, 5, 1, 7, 9, 6, 8]
　
5. 有如下一个字符串变量logs，请统计出每种请求类型的数量（提示：空格分割的第2列是请求类型），得到如下输出：
　
POST 2
　
GET 3
　
下边是logs变量：
　
logs = '''
　
111.30.144.7 "POST /mock/login/?t=GET HTTP/1.1" 200
　
111.30.144.7 "Get /mock/users/?t=POST HTTP/1.1" 200
　
111.13.100.92 "Post /mock/login/ HTTP/1.1" 200
　
223.88.60.88 "GET /mock/users/?t=POST HTTP/1.1" 200
　
111.30.144.7 "GET /mock/users/ HTTP/1.1" 200
　
'''