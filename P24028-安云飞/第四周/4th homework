1. 什么是杨辉三角和转置矩阵（文字说明即可）？
杨辉三角：
    二项式系数在三角形中的一种几何排列。
    前提：每行的端点和结尾的数字都是1
    1.每个数等于它上方两数之和
    2.每行数字左右对称，由1开始逐渐变大
    3.第n行的数字有n项
    4.前n行共[(1+n)n]/2个数
    5.第n行的m个数可表示为C(n-1, m-1)，即为从n-1个不同元素的组合数
    6.第n行的第m个数和第n-m+1个数相等，为组合数性质之一
    7.每个数字等于上一行的左右两个数字之和。可用此性质写出整个杨辉三角。
即第n+1行的第i个数等于第n行的第i-1个数和第i个数之和，这也是组合数的性质之一。
即C(n+1,i)=C(n,i)+C(n,i-1)。

    转置矩阵：将矩阵的行列互换得到的新的矩阵，矩阵的行列式不变。
    设A为m×n阶矩阵（即m行n列），第i 行j 列的元素是a(i,j)，即：
把m×n矩阵A的行换成同序数的列得到一个n×m矩阵，此矩阵叫做A的转置矩阵，记做A`

2. 说明列表和Set集合的相同点和不同点。
    set：可变的、无序的、不重复的元素的集合
    列表：可变的、有序的、可重复的元素的集合

    相同点：都是可变的元素的集合
    不同点：列表是有序的、可重复的元素的集合，set是无序的、不重复的（去重）元素的集合

3. 请写出Set集合支持的所有方法及说明（例如：add 向Set集合中添加一个元素）
    add(elem):增加一个元素到set中；如果元素存在，什么都不做。
    update(*others):合并其他元素到set集合中；参数others必须是可迭代对象；就地修改。
    remove(elem):从set中移除一个元素；元素不存在，抛出keyError异常。
    discard(elem):从set中移除一个元素；元素不存在，什么都不做。
    pop() -> item:移除并返回任意的元素；空集合返回KeyError异常
    clear():移除所有元素。

4. 请写出字典支持的所有方法及说明（例如：pop 从字典中移除指定的key并返回其value）
    dict.clear()
        删除字典中所有元素
    dict.copy()
        返回字典(浅复制)的一个副本
    dict.get(key,default=None)
        对字典dict中的键key,返回它对应的值value，
        如果字典中不存在此键，则返回default 的值(注意，参数default 的默认值为None)
    dict.has_key(key)
        如果键(key)在字典中存在，返回True，否则返回False
    dict.items()
        返回一个包含字典中(键, 值)对元组的列表
    dict.keys()
        返回一个包含字典中键的列表
    dict.values()
        返回一个包含字典中所有值的列表
    dict.pop(key[, default])
        和方法get()相似，如果字典中key 键存在，删除并返回dict[key]，
        如果key 键不存在，且没有给出default 的值，引发KeyError 异常。

5. 请写出Python内建函数及说明（参考：https://docs.python.org/3/library/functions.html）
    bin(x):
        将一个整数转变为一个前缀为“0b”的二进制字符串。结果是一个合法的 Python 表达式。
        如果 x 不是 Python 的 int 对象，那它需要定义 __index__() 方法返回一个整数。
    bytearray([source[, encoding[, errors]]]):
        返回一个新的 bytes 数组。 bytearray 类是一个可变序列，
        包含范围为 0 <= x < 256 的整数.
    bytes([source[, encoding[, errors]]]):
        返回一个新的“bytes”对象， 是一个不可变序列，包含范围为 0 <= x < 256 的整数。
        bytes 是 bytearray 的不可变版本 - 它有其中不改变序列的方法和相同的索引、切片操作。
    callable(object):
        如果实参 object 是可调用的，返回 True，否则返回 False。
    dir([object]):
        如果没有实参，则返回当前本地作用域中的名称列表。
        如果有实参，它会尝试返回该对象的有效属性列表。
    float([x]):
        返回从数字或字符串 x 生成的浮点数。
    format(value[,format_spec]):
        将 value 转换为 format_spec 控制的“格式化”表示。
    hash(object):
        返回该对象的哈希值（如果它有的话）。哈希值是整数。
        它们在字典查找元素时用来快速比较字典的键。
        相同大小的数字变量有相同的哈希值（即使它们类型不同，如 1 和 1.0）。
    help([object]):
        启动内置的帮助系统（此函数主要在交互式中使用）。
        如果没有实参，解释器控制台里会启动交互式帮助系统。
        如果实参是一个字符串，则在模块、函数、类、方法、关键字或文档主题中搜索该字符串，
        并在控制台上打印帮助信息。如果实参是其他任意对象，则会生成该对象的帮助页。
    hex(x):
        将整数转换为以“0x”为前缀的小写十六进制字符串。
        如果 x 不是 Python int 对象，则必须定义返回整数的 __index__() 方法。
    id(object):
        返回对象的"标识值"。该值是一个整数，在此对象的生命周期中保证是唯一且恒定的。
        两个生命期不重叠的对象可能具有相同的id()值。
    input([prompt]):
        如果存在 prompt 实参，则将其写入标准输出，末尾不带换行符。
        接下来，该函数从输入中读取一行，将其转换为字符串（除了末尾的换行符）并返回。
    len(s):
        返回对象的长度（元素个数）。
        实参可以是序列（如 string、bytes、tuple、list 或 range 等）
        或集合（如 dictionary、set 或 frozen set 等）。