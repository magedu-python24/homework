1.简要说明python垃圾回收机制
    答：内存对象引用计数概念
        a.当引用计数为0时，该对象视为垃圾，可以进行垃圾回收
        b.对象引用计数+1
            对象创建,例如：a = 3
            对象引用，例如：a = b
            对象作为参数，传入到函数中，例如：func(a)
            对象作为元素，存储在容器中，例如：list = [a,a]
        c.对象引用计数-1
            对象别名销毁，例如：del a
            对象别名赋予新的对象，例如: a = 4
            对象离开它的作用区域，例如：函数执行完成，局部变量消亡
            对象所在容器销毁，或从容器中删除对象
        d.循环引用会导致内存泄漏
        e.三种情况下会触发垃圾回收
            调用 gc.collect()
            当gc模块的技术器达到阀值
            程序退出
        f.调用import gc模块，并且is_enable()=True才会启动自动垃圾回收
            发现并处理不可达的垃圾对象
            垃圾回收=垃圾检查+垃圾回收
        g.应用
            项目中避免循环引用
            引入gc模块，启动gc模块的自动清理循环引用的对象机制

        垃圾回收一般由系统自行处理，解释器会在特定情况下自动完成垃圾回收操作
        垃圾回收机制，耗时耗资源，非必要情况下，不建议进行垃圾回收操作
2.什么是斐波那契数列、素数、质数、和猴子吃桃问题（文字说明即可）
    答： a.什么是斐波那契数列
            一个数列第三项开始，每一个数都是该数前面两个数之和
        b.素数、质数
            大于1的自然数，且只能被1和自身整除的数
        c.猴子吃桃问题
            已知条件：D10=1，其实就是D9就剩余1.
            D10=1=D9/2-1  ===> D9=2*(D10+1)  ===> N=2*(N+1)
3.写出列表支持的所有的方法及说明（例如：append想列表尾部添加元素）
    答：
        初始化
            l1 = [11,12,13,14,15]
            l2 = list(range(5))==>[0,1,2,3,4]
        元素访问
            l1[2]   ==> 13
            l2[-1]  ==> 4
        列表查询
            l1.index(3) ===> 返回l1列表中3所对应的索引号,如果元素不存在，则报错
            l1.count(3) ===> 返回3在l1列表中出现的次数
        元素修改
            l1[1] = 3  ===> 修改l1列表中索引为1的值改为3，就地修改
            l1.append(11)   ===> 在l1列表的尾部追加新元素11，就地修改
            l1.insert(3, 6) ===> 在l1列表中索引为3的位置，插入新元素6，就地修改
            l1 * 2  ===> 将l1列表中的元素，复制2份，放到新的列表中，产生新列表
            l1 + l2 ===> 将l1和l2列表中的元素合并起来，放到新的列表中，产生新列表
        元素删除
            l1.remove(3)    ===> 在l1列表中删除3这个元素，如果元素不存在，则报错，就地修改
            l1.pop(3)   ===> 在l1列表中删除索引为3的元素，如果超限，则报错，就地修改，有返回值，返回移除的值
            l1.clear()  ===> 删除l1列表中所有的元素
        排序
            l1.reverse()    ===> 将l1列表中的元素顺序反向排序
            l1.sort()   ===> 将l1列表中的元素进行排序
        元素判断
            in  ===> 判断元素是否在列表中，返回bool量
        复制
            l3 = l1.copy    ===> 将l1列表浅拷贝给l3
            l4 = copy.deepcopy(l1)  ===> 将l1列表深拷贝给l4，原列表l1变化，l4不跟随变化

4.实现一个简易的计算器
    （1）. 运行后提示让用户输入一个数字
    （2）. 提示输入操作符（+ - * /）
    （3）. 再次提示输入一个数字
    （4）. 打印计算结果
    （5）. 在不退出程序的前提下，可以允许用户继续输入新一组数据计




