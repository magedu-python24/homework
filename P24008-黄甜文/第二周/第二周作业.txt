1. 简要说明Python垃圾回收机制
   Python使用引用计数记录所有对象的引用数，当对象引用数变为0，它就可以被垃圾回收GC。
   计数增加：赋值给其它变量就增加引用计数（例如：x=3,y=x）。
   计数减少：1.函数运行结束时，局部变量就会被自动销毁，对象引用计数减少。
             2.变量被赋值给其它对象（例如：x=3,y=x,x=4）。

2. 什么是斐波那契数列、素数、质数和猴子吃桃问题（文字说明即可）？
   斐波那契数列：由数学家列昂纳多・斐波那契以兔子繁殖为例子而引入，故又称兔子数列，指的是这样一个数列：1、1                、2、3、5、8、13、21、34、……，这个数列从第3项开始，每一项都等于前两项之和。
   素数：又称质数，一个大于1的自然数，除了1和它自身外，不能被其他自然数整除的数叫做素数；否则称为合数。
   猴子吃桃问题：一只小猴子一天摘了许多桃子，第一天吃了一半，然后忍不住又吃了一个；第二天又吃了一半，再加上                 一个；后面每天都是这样吃。到第10天的时候，小猴子发现只有一个桃子了。问小猴子第一天共摘了多                 少个桃子。
   
3. 请写出列表支持的所有方法及说明（例如: append 向列表末尾添加元素）
  （1）index（value，[start,[stop]]）:通过值从指定区间查找列表内的元素是否匹配，匹配第一个就立即返回索引，匹配不到就抛出异常ValueError。
  （2）count（value）：返回列表中匹配Value的次数。
  （3）len()：列表的长度。
  （4）list[index]=Value：列表元素修改，索引不要超界。
  （5）append（object）：列表尾部追加元素，返回None，返回None就意味着没有新的列表产生，就地修改。
  （6）insert（index，object）-》None：在指定索引插入入元素object，超上界，尾部加，超下界，头部加。
  （7）extend（iteratable）-》None：将可迭代的对象元素追加进来，返回None，就地修改。
  （8）+法  -》list：产生新的列表，原列表不变，本至上调用的是_add_（）方法。
  （9）*法  -》list：重复操作，返回新的列表，原列表不变，注意复杂类型。
  （10）remove（value）-》none：列表删除，从左至右查找第一个匹配value的值并移除该元素，返回none，就地修改。
  （11）pop（[index]）-》item：不写索引，就从尾部弹出一个元素，有索引，就从索引处弹出一个元素，索引超界抛出indexError。
  （12）clear（）-》none：清除所有元素，剩一个空列表。
  （13）reverse（）-》none：将列表元素反转（倒打印），返回none，就地修改
  （14）sort（key=none,reverse=False）->none：对列表进行比较大小后进行排序，默认升序，key 主要是用来进行比较的元素，只有一个参数，具体的函数的参数就是取自于可迭代对象中，指定可迭代对象中的一个元素来进行排序。参数key可以是：key=int，key=len， key=lambda x:x[0]。如果列表有不同类型，key=int则可以让列表元素以int进行比较，但是不会修改元素的类型，只是为了能比较大小而排序而已，不然不同类型不能比较大小而报错。
  （15）value in list：只对内容比较。
  （16）list2=list1.copy()：浅拷贝，复杂类型里指向的内存地址是一样的，当改list2时，list1也会变，这种叫浅拷贝，要特别注意这种引用类型。
  （17）list2=copy.deepcopy(list1) ：深拷贝，需要import copy模块，往后怎么改都是互不影响。
  （18）random.shuffle(list)->none:就地打乱列表元素。
  （19）random.sample(population,k)：从样本空间或总体（序列或者集合类型）中随机取出k个不同的元素，返回一个新列表,k不能超出样本数，否则报错。

4. 实现一个简易的计算器，效果如下：
    （1）. 运行后提示让用户输入一个数字
    （2）. 提示输入操作符（+ - * /）
    （3）. 再次提示输入一个数字
    （4）. 打印计算结果
    （5）. 在不退出程序的前提下，可以允许用户继续输入新一组数据计 
   见第二周.py文件