1. 简要说明Python垃圾回收机制
 高级语言python，采用垃圾回收机制，不需要像C，C++ 用户自己管理维护内存的方式。python自带的解析器CPython主要使用了三种垃圾回收机制：是引用计数为住，标记-清楚和分代回收两种机制为辅的策略。

优势：
 (1）简单
（2）实时性

劣势：
如果仅仅是引用计数回收机制，需要去维护引用计数，存在执行效率问题。无法解决循环引用的问题。



2. 什么是斐波那契数列、素数、质数和猴子吃桃问题（文字说明即可）？

（1）菲波那切数列：

斐波那契数列（Fibonacci sequence），又称黄金分割数列、因数学家列昂纳多·斐波那契（Leonardoda Fibonacci）以兔子繁殖为例子而引入，故又称为“兔子数列”，指的是这样一个数列：1、1、2、3、5、8、13、21、34、……在数学上，斐波纳契数列以如下被以递推的方法定义：F(1)=1，F(2)=1, F(n)=F(n-1)+F(n-2)（n>=3，n∈N*）在现代物理、准晶体结构、化学等领域，斐波纳契数列都有直接的应用
简单来说第三项的值，是第一，第二项的和。以此类推而成。

（2）素数
质数又称素数。一个大于1的自然数，除了1和它自身外，不能被其他自然数整除的数叫做质数；否则称为合数。

（3）猴子吃桃问题
猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个，
第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃前一天剩下的一半零一个。
到第10天早上想再吃时，见只剩下一个桃子了。求第一天共摘多少个桃子？
分析：
第一天的桃子数量，等于第二天的桃子数量加1然后乘以2
第二天的桃子数量，等于第三天的桃子数量加1然后乘以2
第三天的桃子数量，等于第四天的桃子数量加1然后乘以2
第四天的桃子数量，等于第五天的桃子数量加1然后乘以2
第五天的桃子数量，等于第六天的桃子数量加1然后乘以2
第六天的桃子数量，等于第七天的桃子数量加1然后乘以2
第七天的桃子数量，等于第八天的桃子数量加1然后乘以2
第八天的桃子数量，等于第九天的桃子数量加1然后乘以2
第九天的桃子数量，等于第十天的桃子数量加1然后乘以2

其实就是倒推方式的思路。



3. 请写出列表支持的所有方法及说明（例如: append 向列表末尾添加元素）
(1）列表索引访问
list[index]   index() 函数用于从列表中找出某个值第一个匹配项的索引位置。

(2）列表查询
list.index(obj)     从列表中找出某个值第一个匹配项的索引位置
list.count(obj)     统计某个元素在列表中出现的次数
(
)3）列表元素修改
list[index]=value   

(4）列表增加、插入元素
list.append(obj)         在列表末尾添加新的对象

list.insert(index,obj)    从列表中找出某个值第一个匹配项的索引位置    
list.extend(seq)        在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）

(5）移动删除
list.pop([index=-1])   移除列表中的一个元素（默认最后一个元素），并且返回该元素的值

list.remove(obj)
移除列表中某个值的第一个匹配项




