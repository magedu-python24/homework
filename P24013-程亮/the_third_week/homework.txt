1、深拷贝与浅拷贝的区别
	浅拷贝在遇到引用类型时，仅仅时复制了引用，而且复制完成后的对象如果对引用类型的值进行改变，原对象也会发生变化；
	而深度复制是完全不同的两个对象，复制完成后的对象即使对引用类型的值进行改变，也不会影响原对象，反之亦然；
	举个例子：
		浅拷贝：
		lst0=[8,3,4]
		lst1=[1,lst0,5]
		lst2=lst1.copy()
		lst1[1][1]=6 注：这里是对被复制对象进行更改
		lst1,lst2,lst0
		输出：([1, [8, 6, 4], 5], [1, [8, 6, 4], 5], [8, 6, 4]) 
		注：因为被复制对象的改变，使所有相关对象都发生了相同的变化，这就是浅拷贝

		深拷贝：
		import copy
		lst3=[6,3,4]
		lst4=[1,lst3,5]
		lst5=copy.deepcopy(lst4)
		lst4[1][1]=8 注：同样修改被引用对象
		lst4,lst5,lst3
		([1, [6, 8, 4], 5], [1, [6, 3, 4], 5], [6, 8, 4]) 
		注：从这里可以看到，作为复制后的对象lst5，值并没有因为被复制对象lst4的改变而改变，这就是深浅拷贝的区别

2、列表和元组的相同点及不同点
	相同点：都是由若干个元素按顺序组成，元素可以是任意对象，可使用索引的线性数据结构
	不同点：列表是可变的，可以对某个元素重新赋值，或者增减元素；但元组不同，不可以做任何改变，是不可变的对象

3、字符串支持的所有方法及说明
	join:使用string将可迭代对象连接起来，返回新的字符串
	+：将两个字符串连接起来，返回新的字符串
	split:将字符串以某个符号分割，返回一个新的列表
	partition:将字符串分割成两段，返回一个新的元组
	splitlines:按行来进行切割
	upper:所有字符大写
	lower:所有字符小写
	swapcase:把大小写反过来，大写的小写，小写的大写
	
