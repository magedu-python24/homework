【二：本周作业】：请同学们把作业提交到Github哦~~提交时间最迟本周日
1. 说明列表的浅拷贝和深拷贝的区别
  浅拷贝，没有拷贝子对象，所以原始数据改变，子对象也会改变。
  深拷贝，包含对象里面的子对象的拷贝，所以原始对象的改变不会造成深拷贝里任何子元素的改变。

2. 说明列表和元组的相同点和不同点
    相同点：都是序列类型，list 与 tuple 都是序列类型的容器对象，可以存放任何类型的数据、支持切片、迭代等操作
    不同点：两种类型除了字面上的区别(括号与方括号)之外，最重要的一点是tuple是不可变类型，大小固定，而 list 是可变类型、数据可以动态变化
 
3. 请写出字符串支持的所有方法及说明（例如: lower 返回字符串的小写）
    center 方法是通过在字符串两边添加填充字符（默认是空格）让字符串居中
    find 方法是用于在字符串中查找子串，如果找到，就返回子串的第一个字符的索引，否则返回-1
    join 是一个非常重要的字符串方法，作用和 split相反，用于合并序列的元素
   lower 返回字符串的小写
    title 用于将字符串所有单词首字母大写，其他所有字母小写
   replace 将指定子串替换为另一个字符串，并返回替换后的结果。
   split 的作用刚好与 join 相反，用于拆分字符串为序列
   strip 用于将字符串开头和末尾的空白（不包括中间的空白）删除，并返回删除后的结果
   translate 与 replace 一样替换字符串的特定部分，但不同的是 translate 只能进行单字符替换

4. 使用选择排序算法实现排序[3, 5, 1, 7, 9, 6, 8]

s = [3, 5, 1, 7, 9, 6, 8]
n = len(s)
for i in range(0,n):
      min = i
      for j in range(i+1,n):
        if s[j] < s[min]:
            min = j
      s[i],s[min] = s[min],s[i]
print(s)


5. 有如下一个字符串变量logs，请统计出每种请求类型的数量（提示：空格分割的第2列是请求类型），得到如下输出：
POST 2
GET 3
下边是logs变量：
logs = '''
111.30.144.7 "POST /mock/login/?t=GET HTTP/1.1" 200 
111.30.144.7 "Get /mock/users/?t=POST HTTP/1.1" 200 
111.13.100.92 "Post /mock/login/ HTTP/1.1" 200 
223.88.60.88 "GET /mock/users/?t=POST HTTP/1.1" 200 
111.30.144.7 "GET /mock/users/ HTTP/1.1" 200 
''' 

logs = '''
111.30.144.7 "POST /mock/login/?t=GET HTTP/1.1" 200 
111.30.144.7 "Get /mock/users/?t=POST HTTP/1.1" 200 
111.13.100.92 "Post /mock/login/ HTTP/1.1" 200 
223.88.60.88 "GET /mock/users/?t=POST HTTP/1.1" 200 
111.30.144.7 "GET /mock/users/ HTTP/1.1" 200 
'''
logs= logs.upper()
s1 = '''"POST'''
count  = logs.count(s1)
print ('POST='+ str(count))
s1 = '''"GET'''
count  = logs.count(s1)
print ('GET='+ str(count))
