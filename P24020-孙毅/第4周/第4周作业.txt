
【一：章节学习】
课程习题精讲(4)与Set集合：    
        01-杨辉三角解法；
        02-转置矩阵解法；
        03-重复数据统计讲解；
        04-IPython使用和封装解构；
        05-Set操作和hash；
集合运算与字典：
        01-集合运算；
        02-字典概念；
        03-字典遍历和删除注意事项；
        04-缺省字典、有序字典和字典习题讲解；
解析式和生成器表达式：
        01-时间模块使用；
        02-列表解析式习题和生成器表达式；
        03-集合和字典解析式；
        04-选择排序；
        05-内建函数；        
第四周笔记地址见 [简书](https://www.jianshu.com/c/f1cc5a6dbd31 "简书")

【二：本周作业】：请同学们把作业提交到Github哦~~提交时间最迟本周日
1. 什么是杨辉三角和转置矩阵（文字说明即可）？
**杨辉三角**：
杨辉三角是中国古代数学的杰出研究成果之一，它把二项式系数图形化，把组合数内在的一些代数性质直观地从图形中体现出来，是一种离散型的数与形的结合。隐含着自然中的数学递增规律，其涉及多方面的数学知识，印证了“越基本的往往越重要”这条自然科学规律。
**杨辉三角特征**：
**公 式** C(n,m)=n!/((n-m)!*m!)（m≤n）
性质
1.C(n,m)= C(n,n-m)
2.C(n,m)=C(n-1,m-1)+C(n-1,m)
3.它是左右对称的
4.第n行的数等于n-1次二项式展开式中每一项的系数；
5.45°斜线上的数之和等于斜线向右拐角的数字

2. 说明列表和Set集合的相同点和不同点。
**相同点：**
1.set和list是Python常用的结构类型，List可以看成是一个数组，而set就是数学上的集合；
**不同点：**
1.集合（set）是一个可变的、无序的、不重复的、散列的元素的序列；list是一个可变的有序序列；
2.list不可hash;set元素可以hash;
3.set效率远远高于list;

3. 请写出Set集合支持的所有方法及说明（例如：add 向Set集合中添加一个元素）

| set | 方法 |
| ------------- | ------------- |
|set1.add(5) | #增加单个元组：
|set.update() |多元素合并；迭代list多元素添加到set中；
|update(*other)|合并其他元素到set中去， *other对象必须是可迭代对象；
|set1.remove(1)    |#从set中移除一个元素，元素不存在，出KeyError,为什么是KeyError ?
|set1.discard(1)   | #从set中移除一个元素，元素不存在，什么都不做；
|pop() ->item  | #移除并返回随机的元素，为什么是任意元素？ 空集返回KeyError异常；
|clear()  |#移除所有元素；

4.请写出字典支持的所有方法及说明（例如：pop 从字典中移除指定的key并返回其value）

|Method	|Description|
| ------------- | ------------- |
|clear()	|从字典中删除所有元素
|copy()	|返回字典的副本
|fromkeys()	|返回具有指定键和值的字典
|get()	|返回指定键的值
|items()	|返回包含每个键值对的元素的列表
|keys()	|返回包含字典键的列表
|pop()	|删除具有指定键的元素
|popitem()	|删除最后插入的键值对
|setdefault()	|返回指定键的值。如果键不存在:插入具有指定值的键
|update()	|使用指定的键值对更新字典
\values()	|返回字典中所有值的列表


5.请写出Python内建函数及说明（参考：https://docs.python.org/3/library/functions.html）
常见内建函数：

|Function	|Description
| --- | --- |
|abs()	|返回一个数字的绝对值
|all()	|如果可迭代对象中的所有项都为真，则返回真
|any()	|如果可迭代对象中的任何项为真，则返回真
|ascii()	|返回对象的可读版本。用转义字符替换非ascii字符
|bin()	|返回数字的二进制版本
|bool()	|返回指定对象的布尔值
|bytearray()	|返回一个字节数组
|bytes()	|返回一个bytes对象
|callable()	|如果指定的对象是可调用的，则返回True，否则返回False
|chr()	|从指定的Unicode代码中返回一个字符。
|classmethod()	|将方法转换为类方法
|compile()	|将指定的源作为对象返回，准备执行
|complex()	|返回复数
|delattr()	|从指定对象中删除指定的属性(属性或方法)
|dict()	|返回一个字典(数组)
|dir()	|返回指定对象的属性和方法的列表
|divmod()	|返回参数1除以参数2时的商和余数
|enumerate()	|接受集合(例如元组)并将其作为枚举对象返回
|eval()	|计算并执行表达式
|exec()	|执行指定的代码(或对象)
|filter()	|使用筛选器函数来排除可迭代对象中的项
|float()	|返回浮点数
|format()	|格式化指定的值
|frozenset()	|返回一个frozenset对象
|getattr()	|返回指定属性(属性或方法)的值
|globals()	|以字典的形式返回当前全局符号表
|hasattr()	|如果指定的对象具有指定的属性(属性/方法)，则返回True
|hash()	|返回指定对象的哈希值
|help()	|执行内置的帮助系统
|hex()	|将数字转换为十六进制值
|**id()**	|返回对象的id,CPython 返回内存地址;
|input()	|允许用户输入
|int()	|返回一个整数
|**isinstance()**	|如果指定对象是指定对象的实例，则返回True
|issubclass()	|如果指定的类是指定对象的子类，则返回True
|iter()	|返回一个迭代器对象
|len()	|返回对象的长度
|list()	|返回一个列表
|locals()	|返回当前本地符号表的更新字典
|map()	|返回指定的迭代器，并将指定的函数应用于每个项
|max()	|返回可迭代的最大项
|memoryview()	|返回内存视图对象
|min()	|返回可迭代的最小项
|**next()**|**返回可迭代的下一项，要求是迭代器**；next(x，1000) 缺省值对象；
|object()	|返回一个新对象
|oct()	|将数字转换为八进制
|open()	|打开文件并返回文件对象
|ord()	|转换表示指定字符的Unicode的整数
|pow()	|返回x的y次方
|print()	|打印到标准输出设备,返回值为None；
|perty()	|获取、设置和删除属性
|range()	|返回一个数字序列，从0开始，递增1(默认情况下)
|repr()	|返回对象的可读版本
|**reversed()**	|**返回一个反向迭代器;可以使用负索引代替**；
|round()	|轮一个数字
|set()	|返回一个新的set对象
|setattr()	|设置对象的属性(属性/方法)
|slice()	|返回一个切片对象
|**sorted()**	|立即返回一个排序列表；reverse=True,
|@staticmethod()	|将方法转换为静态方法
|str()	|返回一个字符串对象
|sum()	|对迭代器的项求和
|tuple()	|返回一个元组
|type()	|返回对象的类型
|vars()	|返回对象的_dict__属性
|**zip()**	|**从两个或多个迭代器返回一个迭代器**

备注：本周没有代码作业，这些都是Python的基础，即使有写方法你感觉没有什么用平时确实也用不到，但请了解他们，知道有这么个东西存在。 
