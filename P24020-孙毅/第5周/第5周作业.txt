【二：本周作业】：请同学们把作业提交到Github哦~~提交时间最迟本周日

1. 如何为函数定义keyword-only参数（写出个例子即可）？

Python3 keyword-only参数 :即为必须只按照关键字传递而不会有一个位置参数来填充的参数。
eg：
def fn(*,a,b,c):
  print(a,b,c)

fn(a=1,b=2,c=3)


2. 什么是LEGB，请解释
**Python中的作用域分4种情况：**
**L：local，局部作用域**，即函数中定义的变量(局部变量)；调用时创建，调用结束后消亡；
**E：enclosing，嵌套的父级函数的局部作用域**，即包含此函数的上级函数的局部作用域，但不是全局的；
**G：globa，全局变量**，就是模块级别定义的变量；模块import时创建，解释器退出时消亡；
**B：built-in，系统固定模块里面的变量，比如int, bytearray等**。 解释器启动时创建到解释器退出时消亡；

>搜索**变量的优先级顺序依次是**：**作用域局部>外层作用域>当前模块中的全局>python内置作用域，也就是LEGB**。
局部命名空间在函数调用结束后就会消失**，因而，局部变量无法在全局命名空间中使用（上例中的x），但是全局变量可以在函数内访问得到。


3. 二叉树的性质

>**性质：**
1.在二叉树的 第 i 层 上至多有 2^(i-1) 个结点(i>=1)
2.深度为K的二叉树，至多有 2^k -1个结点（k>=1）
3.对于任意一颗二叉树T,如果其终端节点数为 n0(叶子节点数),度数为2的节点数为n2,则 n0=n2 + 1 ;  叶子结点数-1 = 度数为2的结点数
**总结点数**：n=n0+n1+n2  ; n1为度数为1的结点总数；
2*n2+n1=n0+n1+n2-1 => n2=n0-1
>
>4.具有n个结点的完全二叉树的深度为int(log2n)+1 或者 math.ceil(log2(n+1))
>**性质5很重要，会经常用到；**


4. 使用本周学习的技术改造第二周的计算器实现，其目标如下：
     1. 运行后提示让用户输入一个数字
     2. 提示输入操作符（+ - * /）
     3. 再次提示输入一个数字
     4. 打印计算结果
     5. 在不退出程序的前提下，可以允许用户继续输入新一组数据计
     6. 尽可能改善用户体验（新需求） 


def calculator():
    flag = True
    while flag:
        num1 = int(input('输入first number:'))
        choice = input('输入操作符1:+   2:-   3:*   4:/ ')
        num2 = int(input('输入second number:'))

        if choice == '1':
           print(num1,"+",num2,"=", num1+num2)

        elif choice == '2':
           print(num1,"-",num2,"=", num1-num2)

        elif choice == '3':
           print(num1,"*",num2,"=", num1*num2)

        elif choice == '4':
           print(num1,"/",num2,"=", num1/num2)

        else:
           print("非法输入")
        
        print('是否继续使用计算？')

        idea = input('>>>')
        if idea == 'Y' or idea == 'y':
            continue
        else:
            flag = False
calculator()