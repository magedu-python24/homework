1、python的垃圾回收机制：

	当内存中的对象引用计数变成0，这个对象便被视为垃圾；
	变量赋值会使对象引用计数增加；
	函数运行完成，局部变量会销毁，对象引用计数减少；
	垃圾回收的动作和时间由解释器的算法决定，一般情况下不需要手动进行垃圾回收的操作，解释器会在特定时间自动完成垃圾回收的操作。

2、
	1）斐波那契数列：
		以兔子繁殖引入的一组数学数列，从第三个数字开始，该项数字的值为前两个数字值之和。
		如：f0=0 f1=1 f2=1 f3=f1+f2=2 ... 以些类推

		斐波那契数列：1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...
		F(n)=F(n-1)+F(n-2)

	2）素数，也称质数：
		一个大于1的自然数，除了1和它自身外，不能被其他自然数整除的数叫做质数；
		如3，5，7，11，13，17……
		而4，6，9，12之类的数字，因数超过3个，所以就不是质数了。

	3）猴子吃桃问题
		猴子某天摘了一堆桃子，吃了一半又多吃了一个，第二天又吃了剩下的一半也多吃了一个，第三天又吃了第二天剩下的一半也多吃了一个，以及类推，之到最后一天，桃子只剩一个了，需要计算出猴子当初摘了多少个桃子
		设猴子摘了x个桃子
		第一天=x/2+1=oneday
		第二天=oneday/2+1=threeday
		第三天=threeday/2+1=fourday
        ……
		第N天=1  ==>  这天只剩一个桃子了

        每天的消耗：
		d1 =x//2-1
        d2 = d1//2-1
        ……
        d9 = d8//2-1 = 1
        d10  1

3、列表支持的操作及方法
	初始化：a=[1,2,3,4]
	访问元素：a[1]=2
	列表查询： a.index(3) 输出a列表中3这个元素的索引号，结果为2
			  a.count(3) 输出a列表里3这个元素出现的次数，结果为1
	列表修改元素： a[3]=9
	列表增加插入元素： a.append(10) 向a列表的末尾追加10这个元素
					 a.insert(3,6) 向a列表的索引3的位置插入6这个元素
					 a.extend(range(2)) 向a列表的末尾追加range(2)这个可跌代对象生成的结果
					 将两个列表连接，原来的列表不变
					 b=[3,6,2,3]
					 a+b ==> [1, 2, 3, 6, 9, 10, 0, 1, 3, 6, 2, 3]

					 3*a ==> 将a这个列表重复3次输出
	列表删除操作： a.remove(3)  删除a列表中3这个元素
				  a.pop(2) 删除a列表中索引为2的元素
				  a.clear() 清空a列表中的所有元素

	列表的其它操作： a.reverse() 把a列表中的元素顺序反向排序
					a.sort() 把a列表中的元素进行排序
					3 in a 判断3这个值在a列表里存在不存在

	列表复制： b=a.copy() 浅拷贝，只拷贝引用
			  import copy
			  b=copy.deepcopy(a) 深拷贝会把值拷过来，原列表变化，b不变化

4、计算器在本级目录的py脚本中 